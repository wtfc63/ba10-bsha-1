\par Ziel dieser Bachelor-Arbeit war es, eine Handschrift-Erkennung für das Android Betriebssystem zu entwickeln. Diese sollte auf der Grundidee basiert, eine Unterteilung der Eingabepunkte in minimale Gesten vorzunehmen und die eingegebenen Zeichen anhand dieser zu erkennen. Diese so genannten Mikrogesten könnten zum Beispiel Spitzkehren, Linen, Bogen, Halbkreisen oder Kreisen entsprechen und bilden die Grundbestandteile eines jeden Buchstabens.
\par Die grundsätzliche Umsetzbarkeit diese Ansatzes wurde bereits in einer vorherigen Projektarbeit demonstriert, auf welcher diese Arbeit basiert. Daher ging es in dieser Arbeit primär darum, die Anwendbarkeit des Ansatzes in der Praxis auszuloten und eine Umsetzung auf Basis des Android Betriebssystems auszuarbeiten. Vor allem die korrekte und zuverlässige Erkennung der Mikrogesten war eine Herausforderung, da der Benutzer sowohl eine genaue wie auch eine tolerante Erkennung seiner Handschrift erwartet. Dass die Handschriften verschiedener Benutzer sehr unterschiedlich sein können und es daher einer beinahe unüberschaubar grosse Anzahl von gültigen Eingaben geben würde, erschwert die Erkennung zusätzlich. Daher wurde entschieden nicht auf spezielle Schreibweisen einzugehen und die Erkennung relativ generisch zu halten. Einer der Hauptbestandteile dieser Arbeit bestand dadurch auch daraus, ein möglichst erweiter- und anpassbares System zu schaffen. Damit sollten verschiedene Ansätze zur Mikrogesten-Erkennung sowie zur sinnvollen Vor- und Zwischenverarbeitung der Eingabe-Punkte evaluieren werden.
\par Ein weiterer wichtiger Aspekt war die Integration des Erkennungs-Algorithmus in das Android System. Das Betriebssystem erlaubt es, die Eingabe-Methode systemweit durch ein Drittprodukt zu ersetzen. Unsere Applikation kann daher das Soft-Keyboard des Systems mit unserer eigenen Methode austauschen. Weiter war es auch wichtig, die Benutzer-Schnittstelle von der eigentlichen Erkennung zu trennen, um für den Benutzer ein reibungsloses Arbeiten zu ermöglichen. Dies wird bewerkstelligt, indem die Erkennung in einem eigenen Service, einem unabhängigen Hintergrund-Prozess, läuft mit dem unsere Eingabe-Methode über von Android bereitgestellte Kommunikations-Mechanismen zusammen arbeitet.
\par Durch seine Architektur ist die entstandene Applikation sehr gut anpassbar und kann leicht erweitert werden. Somit sollte einer möglichen weiterführenden Arbeit nichts im Wege steht.