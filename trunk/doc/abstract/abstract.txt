\par Ziel dieser Bachelor-Arbeit war es, eine Handschrift-Erkennung für das Android Betriebssystem zu entwickeln. Diese sollte auf der Grundidee basiert, eine Unterteilung der Eingabepunkte in minimale Gesten vorzunehmen und die eingegebenen Zeichen anhand dieser zu erkennen. Diese so genannten Mikrogesten könnten zum Beispiel Spitzkehren, Linen, Bogen, Halbkreisen oder Kreisen entsprechen und bilden die Grundbestandteile eines jeden Buchstabens.
\par Die grundsätzliche Umsetzbarkeit diese Ansatzes wurde bereits in einer vorherigen Projektarbeit demonstriert, auf welcher diese Arbeit basiert. Daher ging es in dieser Arbeit primär darum, die Anwendbarkeit des Ansatzes in der Praxis auszuloten und eine Umsetzung auf Basis des Android Betriebssystems auszuarbeiten. Vor allem die korrekte und zuverlässige Erkennung der Mikrogesten war eine Herausforderung, da der Benutzer sowohl eine genaue wie auch eine tolerante Erkennung seiner Handschrift erwartet. Dass die Handschriften verschiedener Benutzer sehr unterschiedlich sein können und es daher einer beinahe unüberschaubar grosse Anzahl von gültigen Eingaben geben würde, erschwert die Erkennung zusätzlich. Daher wurde entschieden nicht auf spezielle Schreibweisen einzugehen und die Erkennung relativ generisch zu halten. Einer der Hauptbestandteile dieser Arbeit bestand dadurch auch daraus, ein möglichst erweiter- und anpassbares System zu schaffen. Damit sollten verschiedene Ansätze zur Mikrogesten-Erkennung sowie zur sinnvollen Vor- und Zwischenverarbeitung der Eingabe-Punkte evaluieren werden.
\par Ein weiterer wichtiger Aspekt war die Integration des Erkennungs-Algorithmus in das Android System. Das Betriebssystem erlaubt es, die Eingabe-Methode systemweit durch ein Drittprodukt zu ersetzen. Unsere Applikation kann daher das Soft-Keyboard des Systems mit unserer eigenen Methode austauschen. Weiter war es auch wichtig, die Benutzer-Schnittstelle von der eigentlichen Erkennung zu trennen, um für den Benutzer ein reibungsloses Arbeiten zu ermöglichen. Dies wird bewerkstelligt, indem die Erkennung in einem eigenen Service, einem unabhängigen Hintergrund-Prozess, läuft mit dem unsere Eingabe-Methode über von Android bereitgestellte Kommunikations-Mechanismen zusammen arbeitet.
\par Durch seine Architektur ist die entstandene Applikation sehr gut anpassbar und kann leicht erweitert werden. Somit sollte einer möglichen weiterführenden Arbeit nichts im Wege steht.

\par The objective of this bachelor's thesis has been to develop a handwriting recognition system for the Android operating system, based on the idea of grouping the input points into so called Micro-Gestures and to determine the entered characters based on them. These Micro-Gestures might for example represent switchbacks, lines, curves, half circles or circles and are the basic building blocks of any character.
\par The general feasibility of this approach was already demonstrated in a previous project thesis on which this paper is based. Therefore, this paper's primary goal was to explore the practicality of the approach and to work out an implementation for the Android operating system. The main challenge was to provide a correct and reliable recognition of the Micro-Gestures, since a user will expect the recognition of his handwriting to be both accurate and tolerant at the same time. The fact that different users may have a very different style of handwriting further complicates this task. This leads to a nearly unmanageable amount of different but valid inputs. Because of this, it was decided not to take different writing styles into account and to keep the recognition fairly generic. One of the essential parts of this paper therefore consisted of the design of a system which is as expandable and adaptable as possible. This enabled us to evaluate different approaches on the recognition of the Micro-Gestures as well as a variety of algorithms for the preprocessing and intermediate processing of the input points.
\par Another important aspect was the integration of the recognition algorithm into the Android operating system. Android system permits third party application to change the system-wide method for text input. This allows our application to replace the system's soft-keyboard with our own input method. Additionally, it was important to detach the actual recognition process from the user interface to provide the user with a seamless user experience. This was achieved by implementing an own Service, an independently running background process, for the recognition which the input method collaborates with through Android's interprocess communication mechanisms.
\par Because of its architecture, the developed application is very easily adaptable and can be extended without much effort, which should help any further projects that might be based on it.

